// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/note/create/{userID}": {
            "post": {
                "description": "Создаёт новую заметку для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Создание новой заметки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Заметка создана",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/note/files/get/{id}": {
            "get": {
                "description": "Возвращает все файлы, прикреплённые к заметке",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Получение всех файлов к заметке",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заметки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список файлов с URL",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Файлы не найдены",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/note/files/upload": {
            "post": {
                "description": "Загружает файл и привязывает его к заметке",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Загрузка файла к заметке",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Префикс файла",
                        "name": "filePrefix",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Файлы успешно загружены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка загрузки файла",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/note/list": {
            "get": {
                "description": "Возвращает список всех заметок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Список указанного количества заметок",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заметок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Note"
                            }
                        }
                    }
                }
            }
        },
        "/note/{id}": {
            "get": {
                "description": "Возвращает заметку по её уникальному идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Получение заметки по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID заметки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заметка найдена",
                        "schema": {
                            "$ref": "#/definitions/models.Note"
                        }
                    },
                    "404": {
                        "description": "Заметка не найдена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет заметку по её уникальному идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Удаление заметки по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID заметки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заметка удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Заметка не найдена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Выполняет авторизацию пользователя через email и пароль",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрирует нового пользователя и создаёт бакет для файлов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "body": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "body": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Note": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt Дата и время создания заметки.\nrequired: true",
                    "type": "string"
                },
                "created_by": {
                    "description": "CreatedBy UUID пользователя, создавшего заметку.\nexample: 550e8400-e29b-41d4-a716-446655440000\nformat: uuid",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "DeletedAt Дата и время удаления заметки (если удалена). Используется для мягкого удаления.\nformat: date-time",
                    "type": "string",
                    "format": "date-time"
                },
                "file_bucket": {
                    "description": "FileBucket Имя бакета в MinIO, где хранятся файлы заметки.\nexample: user_bucket_abc123",
                    "type": "string"
                },
                "file_prefix": {
                    "description": "FilePrefix Префикс для файлов этой заметки в MinIO.\nexample: note_12345678",
                    "type": "string"
                },
                "id": {
                    "description": "ID Уникальный идентификатор заметки.\nrequired: true",
                    "type": "integer"
                },
                "note_body": {
                    "description": "NoteBody Текст заметки.\nexample: Это содержимое моей заметки.",
                    "type": "string"
                },
                "note_name": {
                    "description": "NoteName Название заметки.\nexample: Моя заметка",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt Дата и время последнего обновления заметки.\nrequired: true",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Note App API",
	Description:      "API server for creating and reading notes",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
